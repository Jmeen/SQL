--서브쿼리(SUBQUERY) SQL 문제입니다.
--문제1.
--평균 급여보다 적은 급여을 받는 직원은 몇명인지 구하시요.(56건)
SELECT count(salary) 
from employees 
where salary <= (SELECT round(AVG(salary)) FROM employees);

--문제2.
--평균급여 이상, 최대급여 이하의 월급을 받는 사원의 
-- 직원번호(employee_id), 이름(first_name), 급여(salary), 평균급여, 최대급여를 급여의 오름차순으로 정렬하여 출력하세요(51건)
SELECT ROUND(AVG(salary)), MAX(salary) FROM employees; -- 평균 6462, 맥스 24000

SELECT first_name, salary FROM employees 
WHERE salary > =( SELECT ROUND(AVG(salary))FROM employees) 
        and  salary <(SELECT MAX(salary) FROM employees)
ORDER BY salary;

SELECT e.employee_id, e.first_name, e.salary
FROM employees e, (SELECT ROUND(AVG(salary))avgsalary, MAX(salary) Maxsalary FROM employees) t
WHERE e.salary BETWEEN t.avgsalary and t.Maxsalary
ORDER BY e.salary;


--문제3.
--직원중 Steven(first_name) king(last_name)이 소속된 부서(departments)가 있는 곳의 주소를 알아보려고 한다.
--도시아이디(location_id), 거리명(street_address), 우편번호(postal_code), 도시명(city), 주(state_province), 나라아이디(country_id)를 출력하세요(1건)
--SELECT loc.location_id, loc.street_address, loc.postal_code, loc.city, loc.state_province ,loc.country_id
--FROM employees e
--JOIN departments d ON e.department_id = d.department_id
--JOIN locations loc ON d.location_id=loc.location_id
--WHERE e.manager_id IS NULL;

--Query 1
SELECT department_id FROM employees
WHERE first_name = 'Steven' and last_name = 'King';
--Query 2
select location_id FROM departments
WHERE department_id =(select department_id FROM employees WHERE first_name='Steven' and last_name ='King');
--Query 3
SELECT loc.location_id, loc.street_address, loc.postal_code, loc.city, loc.state_province ,loc.country_id
FROM locations loc
WHERE loc.location_id = (select location_id FROM departments
                            WHERE department_id =(select department_id FROM employees WHERE first_name='Steven' and last_name ='King'));

--문제4.
--job_id 가 'ST_MAN' 인 직원의 급여보다 작은 직원의 사번,이름,급여를 급여의 내림차순으로
--출력하세요 -ANY연산자 사용(74건)
--SELECT salary from employees where job_id = 'ST_MAN';

SELECT employee_id, first_name, salary FROM employees
WHERE salary < ANY (SELECT salary from employees where job_id = 'ST_MAN')
ORDER BY salary DESC ;
    

--문제5.
--각 부서별로 최고의 급여를 받는 사원의 직원번호(employee_id), 이름(first_name)과 급여
--(salary) 부서번호(department_id)를 조회하세요
--단 조회결과는 급여의 내림차순으로 정렬되어 나타나야 합니다.
--조건절비교, 테이블조인 2가지 방법으로 작성하세요
--(11건)

SELECT department_id, MAX(salary) FROM employees  GROUP BY department_id;

SELECT employee_id, first_name, salary, department_id
FROM employees 
WHERE (department_id, salary) IN (SELECT department_id, MAX(salary) FROM employees  GROUP BY department_id)
ORDER BY salary dESC;

-- 조인 활용
SELECT e.employee_id, e.first_name, e.salary, e.department_id
FROM employees e, (SELECT department_id, MAX(salary) salary FROM employees  GROUP BY department_id) sub
WHERE e.department_id = sub.department_id and e.salary = sub.salary
ORDER BY salary dESC;

SELECT e.employee_id, e.first_name, e.salary, e.department_id
FROM employees e 
WHERE e.salary = (SELECT MAX(salary) FROM employees WHERE employees.department_id = e.department_id)
ORDER BY salary dESC;

--문제6.
--각 업무(job) 별로 연봉(salary)의 총합을 구하고자 합니다.
--연봉 총합이 가장 높은 업무부터 업무명(job_title)과 연봉 총합을 조회하시오 (19건)
SELECT job_title from jobs WHERE job_id IN (SELECT SUM(e.salary)  from employees e GROUP BY e.job_id);

SELECT j.job_title ,SUM(e.salary)
FROM employees e, jobs j 
WHERE e.job_id = j.job_id
GROUP BY j.job_title
ORDER BY SUM(e.salary) desc;


--- 강사 문제 풀이
SELECT j.job_title, SUM(salary) sumSalary
FROM employees Group BY job_id;

SELECT j.job_title, t.sumSalary
FROM jobs j , (SELECT job_id, SUM(salary) sumSalary
                FROM employees Group BY job_id) t
WHERE j.job_id=t.job_id;

--문제7.
--자신의 부서 평균 급여보다 연봉(salary)이 많은 직원의 직원번호(employee_id), 이름
--(first_name)과 급여(salary)을 조회하세요(38건)
SELECT AVG(salary) "Average" from employees GROUP BY department_id;

SELECT employee_id,first_name, salary FROM employees e
WHERE e.salary>(SELECT AVG(salary) salary  FROM employees dpt WHERE e.department_id = dpt.department_id);

-- 다른방법
SELECT e.employee_id, e.first_name, e.salary 
FROM employees e, (SELECT department_id, AVG(salary) salary  FROM employees GROUP BY department_id) t
WHERE e.department_id = t.department_id
and e.salary>t.salary;


--문제8.
--직원 입사일이 11번째에서 15번째의 직원의 사번, 이름, 급여, 입사일을 입사일 순서로 출력

SELECT rnum, first_name, salary, hire_date
FROM 
    (select ROWNUM rnum, first_name, salary, hire_date 
        from employees order by hire_date asc)
where rnum BETWEEN '11' and '15';
-- 이렇게 하면 순서가 뒤죽박죽 꼬여버린다.

SELECT rn, first_name, salary, hire_date
FROM
    (SELECT rownum rn, first_name, salary, hire_date 
        from (select first_name, salary, hire_date 
            from employees order by hire_date asc))
where rn BETWEEN 11 and 15;
