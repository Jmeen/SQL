-------
-- subquery
-------
-- 하나의 질의문 안에 다른 질의문을 포함하는 형태.
-- 전체 사원 중 , 급여의 중앙값보다 많이 받는 사원
-- 1. 급여의 중앙값
SELECT median(salary) FROM employees; --  6200
-- 2. 6200 보다 많이 받는 사원 쿼리
SELECT first_name, salary FROM employees WHERE salary>6200;
--3. 두 쿼리를 합쳐보자
SELECT first_name, salary FROM employees 
WHERE salary>(SELECT median(salary) FROM employees);

-- DEN보다 늦게 입사한 사원들
-- 1. den 입사일 쿼리
SELECT hire_date FROM employees WHERE first_name='Den';
-- 2. 특정 날짜 이 후 입사한 사원 쿼리
SELECT first_name, hire_date FROM employees WHERE hire_date>='02/12/07';
-- 3. 두개를 합침
SELECT first_name, hire_date 
FROM employees 
WHERE hire_date >= (SELECT hire_date FROM employees WHERE first_name='Den');

--[연습] hr.employees
-- 급여를 가장 적게 받는 사람의 이름, 급여, 사원 번호를 출력하시오
-- 평균 급여보다 적게 받는 사원의 이름, 급여를 출력해 보세요.


------
-- 다중행 서브쿼리
-- 서브 쿼리의 결과 레코드가 둘 이상이 나올때, 단일행 연산자를 사용할 수 없음.
-- IN, any, ALL, EXISTS 등 집합 연산자를 활용해야 한다.

SELECT salary FROM employees WHERE department_id='110'; -- 2ROW(12008, 8300)

SELECT first_name, salary FROM employees WHERE salary = (SELECT salary FROM employees WHERE department_id='110');  -- ERROR

-- 결과가 다중행이면 집합 연산자를 활용해야 한다.
-- IN : salary =  12008 or salary =  8300
SELECT first_name, salary FROM employees WHERE salary IN (SELECT salary FROM employees WHERE department_id='110'); 

-- ALL(AND) : salary >  12008 and salary >  8300
SELECT first_name, salary FROM employees WHERE salary > ALL (SELECT salary FROM employees WHERE department_id='110'); 

-- ANY(OR) : salary >  12008 or  salary >  8300
SELECT first_name, salary FROM employees WHERE salary > ANY (SELECT salary FROM employees WHERE department_id='110');

-- 각 부서별로 최고 급여를 받는 사원을 출력해보자
--1 . 각 부서 최고 급여 확인 쿼리
Select department_id, MAX(salary) FROM employees
Group by department_id;

--2. 서브쿼리의 결과가(department_id, MAX(salary)) 
SELECT department_id, employee_id, first_name , salary 
FROM employees
WHERE (department_id, salary) IN (Select department_id, MAX(salary) FROM employees
                                    Group by department_id)
ORDER BY department_id;

-- 서브쿼리와 조인
SELECT e.department_id, e.employee_id, e.first_name, e.salary
FROM employees e , (SELECT department_id, MAX(salary) salary FROM employees GROUP BY department_id) sal
WHERE e.department_id = sal.department_id and e.salary = sal.salary
ORDER BY e.department_id;
